unit WebModuleUnit1;

interface

uses
        System.SysUtils,
        System.Classes,
        Web.HTTPApp,
        System.IOUtils,
        PSPParser;

type
        TWebModule1 = class(TWebModule)
                procedure WebModule1DefaultHandlerAction(Sender: TObject;
                  Request: TWebRequest; Response: TWebResponse;
                  var Handled: Boolean);
        private
                function GetContentTypeFromExtension(const Ext: string): string;
        public
                { Public declarations }
        end;

var
        WebModuleClass: TComponentClass = TWebModule1;

implementation

uses
        PSPParser in 'PSPParser.pas';

{%CLASSGROUP 'System.Classes.TPersistent'}
{$R *.dfm}

procedure TWebModule1.WebModule1DefaultHandlerAction(Sender: TObject;
  Request: TWebRequest; Response: TWebResponse; var Handled: Boolean);
var
        FilePath, RequestedFile, BasePath, Ext: string;
        FileStream: TFileStream;
        Parser: TPSPParser;
begin
        RequestedFile := Request.PathInfo;

        if (RequestedFile = '') or (RequestedFile = '/') then
                RequestedFile := 'index.html'
        else if RequestedFile.StartsWith('/') then
                Delete(RequestedFile, 1, 1); // remove leading slash

        // base path to your www folder
        // TODO: remove hardcoded path
        BasePath :=
          'C:\Users\Bill jenkins\Documents\Embarcadero\Studio\Projects\PSPEngine\Win32\Debug\www'
          + PathDelim;
        FilePath := BasePath + StringReplace(RequestedFile, '/', PathDelim,
          [rfReplaceAll]);
        Ext := LowerCase(ExtractFileExt(FilePath));

        if not FileExists(FilePath) then
        begin
                Response.Content := '<h1>404 Not Found</h1>';
                Response.StatusCode := 404;
                Handled := True;
                Exit;
        end;

        if Ext = '.psp' then
        begin
                Parser := TPSPParser.Create;
                try
                        Parser.LoadFromFile(FilePath);
                        Parser.Parse;
                        Response.Content := Parser.GetHTML;
                        Response.ContentType := 'text/html';
                finally
                        Parser.Free;
                end;
        end
        else
        begin
                FileStream := TFileStream.Create(FilePath,
                  fmOpenRead or fmShareDenyNone);
                Response.ContentStream := FileStream;
                Response.ContentType := GetContentTypeFromExtension(Ext);
        end;

        Response.SetCustomHeader('Server', 'Pascal Server Pages/0.1');
        Response.SendResponse;
        Handled := True;
end;

function TWebModule1.GetContentTypeFromExtension(const Ext: string): string;
var
        LExt: string;
begin
        LExt := LowerCase(Ext);
        if LExt = '.html' then
                Result := 'text/html'
        else if LExt = '.htm' then
                Result := 'text/html'
        else if LExt = '.css' then
                Result := 'text/css'
        else if LExt = '.js' then
                Result := 'application/javascript'
        else if LExt = '.json' then
                Result := 'application/json'
        else if LExt = '.png' then
                Result := 'image/png'
        else if (LExt = '.jpg') or (LExt = '.jpeg') then
                Result := 'image/jpeg'
        else if LExt = '.gif' then
                Result := 'image/gif'
        else if LExt = '.svg' then
                Result := 'image/svg+xml'
        else
                Result := 'application/octet-stream';
end;

end.
